spring security + aop를 적용했다.

이번에 return값에 주소값이 나오는걸 해결하는방법중에 @ToString 어노테이션 방법이 있다는것을 알았는데 

public String toString() {
return "id =" + userId + "token" + token;}을 활용해서 사용하는것보다 훨씬 간단하고 편했다.

@Target(ElementType.METHOD)
@Retention(RetentionPolicy.RUNTIME)
public @interface TrackTime {
}

@Aspect // 이 클래스가 AOP 클래스임을 명시
@Component
@Slf4j
public class LoggingAspect {

    @Pointcut("@annotation(com.example.demo.aop.TrackTime)") // AOP 적용 대상 메서드를 지정
    private void trackTimeAnnotation() {
    }

    @Around("trackTimeAnnotation()") // 포인트컷 trackTimeAnnotation()을 대상으로 함
    public Object logExecutionTime(ProceedingJoinPoint joinPoint) throws Throwable {

        long startTime = System.currentTimeMillis();

        try {
            Object result = joinPoint.proceed(); // 실제 메서드를 실행
            log.info("실제 메서드 {}", result);
            return result;
        } catch (Throwable e) {
            throw new RuntimeException(e);
        }
        finally {
            long endTime = System.currentTimeMillis();;
            long duration = endTime - startTime;
            log.info("ExecutionTime is {}ms", duration);
        }

    }
}
를 만들었다. 
